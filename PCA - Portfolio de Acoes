import pandas as pd 
import numpy as np
import yfinance as yf
from matplotlib import pyplot as plt
plt.style.use('fivethirtyeight')

# Baixando as Cotações 

ibovurl = "http://bvmf.bmfbovespa.com.br/indices/ResumoCarteiraTeorica.aspx?Indice=ibov&idioma=pt-br"
ibrx = pd.read_html(ibovurl)

# Selecionando apenas a columa dos tickers 

tickers = ibrx[0][0:]['Código'].tolist()
tickers.remove('Quantidade Teórica Total  Redutor')


# Adicionando .SA em todas as ações

for i in range(0, len(tickers)):
    tickers[i] = tickers[i] + '.SA'
    
# Buscando no yahoo finance o preço de fechamento ajustado

dataset = yf.download(tickers = tickers, start = '2019-01-01', end = '2021-01-01')['Adj Close']

dataset = pd.DataFrame(dataset)



# Preparando os Dados 


missing_fractions = dataset.isnull().mean().sort_values(ascending=False)

missing_fractions.head(10)

drop_list = sorted(list(missing_fractions[missing_fractions > 0.50].index))

dataset.drop(labels=drop_list, axis=1, inplace=True)
dataset = dataset.fillna(method= 'ffill')


retorno = dataset.apply(np.log).diff(1)


from sklearn.decomposition import PCA

pca = PCA(10).fit(retorno.fillna(0))

pc1 = pd.Series(index=rs.columns, data=pca.components_[0])

# Variância Explicada e Acumulada dos 10 autovalores

NumEigenvalues=10
fig, axes = plt.subplots(ncols=2, figsize=(14,4))
Series1 = pd.Series(pca.explained_variance_ratio_[:NumEigenvalues]).sort_values()*100
Series2 = pd.Series(pca.explained_variance_ratio_[:NumEigenvalues]).cumsum()*100
Series1.plot.barh(ylim=(0,9), label="woohoo",title='Variância Explicada',ax=axes[0]);
Series2.plot(ylim=(0,100),xlim=(0,9),ax=axes[1], title='Variância Explicada Acumulada');
# explained_variance
pd.Series(np.cumsum(pca.explained_variance_ratio_)).to_frame('Explained Variance').head(NumEigenvalues).style.format('{:,.2%}'.format)

plt.tight_layout()
plt.savefig('Variancia.png')


weights = abs(pc1)/sum(abs(pc1))
myrs = (weights*retorno).sum(1)
myrs.cumsum().apply(np.exp).plot()

# Adicionando o Benchmark

prices = yf.download(['^BVSP'], start='2019-01-01', end = '2021-01-01')['Adj Close']

rs_df = pd.concat([myrs, prices.apply(np.log).diff(1)], 1)
rs_df.columns = ["PCA Portfolio", "IBOV"]

rs_df.dropna().cumsum().apply(np.exp).plot(subplots=True, figsize=(10,6), grid=True, linewidth=3);
plt.tight_layout()
plt.savefig('tmp.png')


# Comparando o Portfólio de Ações do PCA com o IBOV

myrs = retorno[pc1.nlargest(5).index].mean(1)
myrs.cumsum().apply(np.exp).plot(figsize=(15,5), grid=True, linewidth=3, title='PCA 10 Portfolio vs. IBOV', color = 'darkblue')
myrs1 = retorno[pc1.nlargest(10).index].mean(1)
myrs1.cumsum().apply(np.exp).plot(figsize=(15,5), grid=True, linewidth=3)
prices['2019':].apply(np.log).diff(1).cumsum().apply(np.exp).plot(figsize=(10,6), grid=True, linewidth=3, color = 'black')
plt.legend(['5 Ações', '10 Ações', 'IBOV'])

plt.tight_layout()
plt.savefig('pca10.png')
